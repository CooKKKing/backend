name: Java CI with Gradle

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set active profile for Spring Boot
        run: echo "SPRING_PROFILES_ACTIVE=server"

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t spring-cicd .
          docker tag spring-cicd taeckhyun/spring-cicd:${GITHUB_SHA::7}
          docker push taeckhyun/spring-cicd:${GITHUB_SHA::7}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to Server
        run: |
          # 환경변수 export
          export JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
          export AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_BUCKET_NAME="${{ secrets.AWS_BUCKET_NAME }}"
          export MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}"
          export MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"

          aws ssm send-command \
            --instance-ids i-0d918917facba9df1 \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \\'^server$\\'; then',
              '  sudo docker stop server',
              '  sudo docker rm server',
              'fi',
              'sudo docker pull taeckhyun/spring-cicd:${GITHUB_SHA::7}',
              'sudo docker tag taeckhyun/spring-cicd:${GITHUB_SHA::7} spring-cicd',
              'sudo docker run -d --name server -p 8080:8080 \\
                -e JWT_SECRET_KEY=$JWT_SECRET_KEY \\ 
                -e AWS_ACCESS_KEY=$AWS_ACCESS_KEY \\ 
                -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \\ 
                -e AWS_BUCKET_NAME=$AWS_BUCKET_NAME \\ 
                -e MAIL_USERNAME=$MAIL_USERNAME \\ 
                -e MAIL_PASSWORD=$MAIL_PASSWORD \\ 
                spring-cicd'
            ]" \
            --output text
